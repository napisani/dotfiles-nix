set  -g default-terminal "xterm-256color"
set  -g base-index      0
setw -g pane-base-index 0

# TPM plugins <prefix> + I to install plugins
# Quickly reload config by running
# :source-file ~/.config/tmux/tmux.conf

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'christoomey/vim-tmux-navigator'

# easy copy paste
# set -g @plugin 'Morantron/tmux-fingers'
set -g @plugin 'fcsonline/tmux-thumbs'
set -g @thumbs-command 'echo -n {} | pbcopy'

## theme
set -g @plugin 'catppuccin/tmux'

set -g @catppuccin_window_left_separator ""
set -g @catppuccin_window_right_separator " "
set -g @catppuccin_window_middle_separator " █"
set -g @catppuccin_window_number_position "right"

set -g @catppuccin_window_default_fill "number"

set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_current_text "#{pane_current_path}"

set -g @catppuccin_status_modules "application session date_time"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"
# source-file ~/.tmux/tokyonight.tmuxtheme

set -g mouse on
set-window-option -g xterm-keys on
set-option -g default-shell "$SHELL"
set-option -g default-command "$SHELL -l"

# prefix / leader keys
# set-option -g prefix C-b
unbind C-Space
unbind C-b
# unbind C-a
set -g prefix C-Space
# set -g prefix C-a
bind C-Space send-prefix
# bind C-a send-prefix
# # Use vim keybindings in copy mode
setw -g mode-keys vi


# use leader + [ to enter copy mode
# v or V to start selecting 
# y to yank
bind-key -T edit-mode-vi Up send-keys -X history-up
bind-key -T edit-mode-vi Down send-keys -X history-down
unbind-key -T copy-mode-vi Space     ;   bind-key -T copy-mode-vi v send-keys -X begin-selection
unbind-key -T copy-mode-vi Enter     ;   bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
unbind-key -T copy-mode-vi C-v       ;   bind-key -T copy-mode-vi C-v send-keys -X rectangle-toggle
unbind-key -T copy-mode-vi [         ;   bind-key -T copy-mode-vi [ send-keys -X begin-selection
unbind-key -T copy-mode-vi ]         ;   bind-key -T copy-mode-vi ] send-keys -X copy-selection
bind P paste-buffer
bind -T copy-mode-vi MouseDragEnd2Pane send-keys -X copy-pipe-and-cancel "pbcopy"

# bind -T copy-mode-vi v send -X begin-selection
# bind -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"
# bind P paste-buffer
# bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe-and-cancel "pbcopy"


set -g status-keys vi
# set -g default-terminal "screen-256color" 
# true color support
set-option -sa terminal-overrides ",xterm*:Tc"

set-option -g allow-rename off

# activity/bells
set-option -g visual-activity off
set-option -g visual-bell off
set-option -g visual-silence off
set-option -g bell-action none
set-window-option -g monitor-activity on


bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R




# vim :checkhealth suggestions
set-option -sg escape-time 10
set-option -g focus-events on
set -sg terminal-overrides ",*:RGB"

# open new panes in current directory
bind '"' split-window -v -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'

# edit scrollback buffer with neovim 
unbind-key e
# bind-key e send-keys "scrollbacktamer" C-m
bind-key e run-shell 'export SBTAMER_TERMINATOR=".*❯.*" && export SBTAMER_EDITOR="tmux display-popup -E -w 90%% -h 90%% nvim \"+term cat %s\" +\"execute \\\":normal! G\\\"\"" && scrollbacktamer -editor "$SBTAMER_EDITOR"'
unbind-key o
bind-key o display-popup -y 45 -h 90% -w 90% -E tmux-show-popup.sh

unbind-key o
bind-key o if-shell 'tmux display -p "#{session_name}" | grep -q "_popup_"' 'detach' 'display-popup -y 45 -h 90% -w 90% -E tmux-show-popup.sh'

# unbind-key a
# bind-key a  if-shell 'tmux display -p "#{session_name}" | grep -q "_popup_"' 'detach' 'display-popup -y 45 -h 90% -w 90% -E tmux-show-popup.sh ai opencode'

unbind-key q
bind-key q if-shell 'tmux display -p "#{session_name}" | grep -q "_popup_"' 'detach' 'display-panes'

# make session selection so that it doesnt include _popup_ sessions
unbind-key s
# ingore sessions with names that start with _popup_ or _proctmux
bind-key s choose-tree -Zs -f '#{?#{||:#{m:_popup_*,#S},#{m:_proctmux*,#S}},0,1}'

# make the a session selection that includes all sessions
unbind-key S 
bind-key S choose-tree -Zs

bind-key R source-file ~/.config/tmux/tmux.conf \; display "Reloaded tmux config"




# Prefix + T → Tag a pane with a unique identifier
bind-key T command-prompt -p "Unique tag for pane %: " "run 'tmux-mcptag.sh %1 #{pane_id}'"

# Prefix + C-T → clear @mcptag on current pane
bind-key C-T set -p -u @mcptag
## Notes:
# <prefix> + I to install plugins
# <prefix> + R to reload config
